<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="emp">
	
	<resultMap id="empMap" type="emp">
		<id column="emp_id" property="empId"/>
		<result column="emp_name" property="empName"/>
		<result column="emp_no" property="empNo"/>
<!-- 	<result column="dept_code" property="deptCode"/> 얘는 이제 employee 필드에 존재하지 않음 -->
		<result column="job_code" property="jobCode"/>
		<result column="sal_level" property="salLevel"/>
		<result column="manager_id" property="managerId"/>
		<result column="ent_Date" property="entDate"/>
		<result column="hire_Date" property="hireDate"/>
		<result column="email" property="email"></result>
		<result column="phone" property="phone"></result>
		<result column="salary" property="salary"></result>
		<result column="bonus" property="bonus"></result>
		<!-- Employee 클래스 : Department 클래스 1:1 관계 ~ Has a 관계에 있는 객체를 매핑할 때 -->
		<association property="dept" resultMap="deptMap"/> <!-- 얘는 resultMap 제일 마지막 줄에서 사용해야 한다!! -->
	</resultMap>
	<resultMap type="department" id="deptMap">
		<id column="dept_id" property="deptId"></id>
		<result column="dept_title" property="deptTitle"></result>
		<result column="location_id" property="locationId"></result>
		<collection property="employees" resultMap="empMap"/>
	</resultMap>
	
	<select id="selectDeptById" resultMap="deptMap">
		SELECT * FROM DEPARTMENT LEFT JOIN EMPLOYEE ON DEPT_ID = DEPT_CODE 
		WHERE DEPT_ID=#{deptId}
		<!-- 부서가 지정되지 않은 애들 2명 있기 때문에 OUTER조인 -->
	</select>
	
	<select id="selectEmpAll" resultMap="empMap">
		SELECT * FROM EMPLOYEE
	</select>
	<select id="searchEmp" resultMap="empMap" parameterType="map">
	SELECT * FROM(
         	SELECT E.*,D.*,
         		DECODE(SUBSTR(EMP_NO,8,1),'1','M','2','F','3','M','4','F') AS GENDER 
         	FROM EMPLOYEE E JOIN DEPARTMENT D ON DEPT_CODE = DEPT_ID)
		<!-- <where> --> 
		<trim prefix="where" prefixOverrides="AND|OR">
			<if test="type!=null and type!='' and keyword!=''">
				${type} LIKE '%${keyword}%'
			</if>
			<if test="gender!=null and gender!=''">
				AND GENDER=#{gender}
			</if>
			<if test=" salary != 0 and salFlag!=null and salFlag=''">
				<if test="salFlag=='ge'">
					AND salary >= #{salary}
				</if>
				<if test="salFlag=='le'">
					<!-- AND SALARY &lt;= #{salary} -->
					AND salary <![CDATA[<=]]> #{salary}
				</if>
			</if>
			<if test="jobs != null and jobs != ''">
				AND job_code in <!-- (값, 값, 값 ...) -->
				<!-- 
					foreach 태그를 이용 
					속성 
					1. collection : 배열, 리스트 방식의 데이터 대입 -> JSTL 의 items 라는 속성과 동일함
					2. item : 한 개의 값을 저장하는 변수명 -> JSTL 의 var 속성과 동일
					3. open : first일 때 출력할 값을 설정하는 속성
					4. close : last일 때 출력할 값을 설정하는 속성
					5. separator : 반복할 때마다 출력할 값을 설정하는 속성
					6. index : 인덱스번호를 저장하는 변수	
				-->
				<foreach collection="jobs" item ="j" open="(" close=")" separator=",">
					#{j}
				</foreach>
				
				
			
			</if>
		</trim>
		<!-- </where> -->
	</select>
</mapper>
